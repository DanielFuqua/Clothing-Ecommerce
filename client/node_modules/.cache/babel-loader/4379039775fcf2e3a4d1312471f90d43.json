{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\"; //BEFORE LEVERAGING THUNKS...\n\n/*\nexport const updateCollections = (collectionsMap) => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionsMap,\n});\n*/\n//LEVERAGING THUNKS...\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage\n}); //ASYNCHRONUS ACTION CREATOR... THIS IS WHERE THE ASYNC STUFF FROM THE SHOP COMPONENT IS BEING MOVED TO...\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n}; // THIS IS ALL A THUNK IS... A FUNCTION THAT RETURNS A FUNCTION... THAT GETS ACCESS TO DISPATCH... SO THT WE CAN DISPATCH MULTIPLE ACTIONS AND HANDLE ASYNC CODE INSIDE OF IT...","map":{"version":3,"sources":["/Users/danielfuqua/workspace/Clothing-Ecommerce/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP,C,CAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEJ,eAAe,CAACU,uBADkC;AAExDD,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC,C,CAKP;;AACA,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AAEAW,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMX,cAAc,GAAGL,+BAA+B,CAACgB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KALH,EAMGY,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACH,uBAAuB,CAACU,KAAD,CAAxB,CAN5B;AAOD,GAXD;AAYD,CAbM,C,CAcP","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\n//BEFORE LEVERAGING THUNKS...\n\n/*\nexport const updateCollections = (collectionsMap) => ({\n  type: ShopActionTypes.UPDATE_COLLECTIONS,\n  payload: collectionsMap,\n});\n*/\n\n//LEVERAGING THUNKS...\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.fetchCollectionsFailure,\n  payload: errorMessage,\n});\n\n//ASYNCHRONUS ACTION CREATOR... THIS IS WHERE THE ASYNC STUFF FROM THE SHOP COMPONENT IS BEING MOVED TO...\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error)));\n  };\n};\n// THIS IS ALL A THUNK IS... A FUNCTION THAT RETURNS A FUNCTION... THAT GETS ACCESS TO DISPATCH... SO THT WE CAN DISPATCH MULTIPLE ACTIONS AND HANDLE ASYNC CODE INSIDE OF IT...\n"]},"metadata":{},"sourceType":"module"}