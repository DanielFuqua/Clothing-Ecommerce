{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/danielfuqua/workspace/Clothing-Ecommerce/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); // { match } is passed through props through Route components, and the shop page comes from a Route component in App.js\n\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor() {}\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  } //https://firestore.googleapis.com/v1/projects/clothing-ecommerce-db-411c7/databases/(default)documents\n\n\n  render() {\n    const {\n      match,\n      isFetchingCollections,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: isFetchingCollections,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: !isCollectionsLoaded,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionsFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/danielfuqua/workspace/Clothing-Ecommerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionsFetching","selectIsCollectionsLoaded","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","componentDidMount","props","render","match","isFetchingCollections","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,2BADF,EAEEC,yBAFF,QAGO,iCAHP;AAKA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACR,mBAAD,CAAjD;KAAMS,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACN,cAAD,CAA7C,C,CAEA;;MAFMQ,yB;;AAGN,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAG,CAAE;;AAEhBC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAC3B,GANoC,CAQrC;;;AAEAW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,qBAAT;AAAgCC,MAAAA;AAAhC,QAAwD,KAAKJ,KAAnE;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFtB;AAGE,QAAA,MAAM,EAAGL,KAAD,iBACN,QAAC,6BAAD;AACE,UAAA,SAAS,EAAEG,qBADb;AAAA,aAEMH;AAFN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADtB;AAEE,QAAA,MAAM,EAAGL,KAAD,iBACN,QAAC,yBAAD;AACE,UAAA,SAAS,EAAE,CAACI,mBADd;AAAA,aAEMJ;AAFN;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAnCoC;;AAsCvC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC/Ce,EAAAA,qBAAqB,EAAEZ,2BADwB;AAE/Ca,EAAAA,mBAAmB,EAAEZ;AAF0B,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport {\n  selectIsCollectionsFetching,\n  selectIsCollectionsLoaded,\n} from \"../../redux/shop/shop.selectors\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// { match } is passed through props through Route components, and the shop page comes from a Route component in App.js\nclass ShopPage extends React.Component {\n  constructor() {}\n\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  //https://firestore.googleapis.com/v1/projects/clothing-ecommerce-db-411c7/databases/(default)documents\n\n  render() {\n    const { match, isFetchingCollections, isCollectionsLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionOverviewWithSpinner\n              isLoading={isFetchingCollections}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner\n              isLoading={!isCollectionsLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionsFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}