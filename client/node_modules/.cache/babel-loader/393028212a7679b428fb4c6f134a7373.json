{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDM-8qoaDpP7RdOEBJ-BgJZnl4Q2qNe-vE\",\n  authDomain: \"clothing-ecommerce-db-411c7.firebaseapp.com\",\n  projectId: \"clothing-ecommerce-db-411c7\",\n  storageBucket: \"clothing-ecommerce-db-411c7.appspot.com\",\n  messagingSenderId: \"436483630843\",\n  appId: \"1:436483630843:web:487d3bcf35aefc78f7b25e\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection(\"users\");\n  const snapShot = await userRef.get();\n  const collectionSnapShot = await collectionRef.get();\n  console.log({\n    collection: collectionSnapShot.docs.map(doc => doc.data())\n  });\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/danielfuqua/workspace/Clothing-Ecommerce/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapShot","console","log","docs","map","data","exists","displayName","email","createdAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","forEach","obj","newDocRef","commit","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,6CAFC;AAGbC,EAAAA,SAAS,EAAE,6BAHE;AAIbC,EAAAA,aAAa,EAAE,yCAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE;AANM,CAAf;AASA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA,UAAU,EAAEG,kBAAkB,CAACG,IAAnB,CAAwBC,GAAxB,CAA6BV,GAAD,IAASA,GAAG,CAACW,IAAJ,EAArC;AAAd,GAAZ;;AACA,MAAI,CAACP,QAAQ,CAACQ,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBlB,QAA/B;AACA,UAAMmB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMlB,OAAO,CAACmB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGlB;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOqB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCU,KAAK,CAACC,OAAzC;AACD;AACF;;AAED,SAAOrB,OAAP;AACD,CAxBM;AA0BP,OAAO,MAAMsB,yBAAyB,GAAG,OACvCC,aADuC,EAEvCC,YAFuC,KAGpC;AACH,QAAMpB,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqBkB,aAArB,CAAtB;AAEA,QAAME,KAAK,GAAGxB,SAAS,CAACwB,KAAV,EAAd;AACAD,EAAAA,YAAY,CAACE,OAAb,CAAsBC,GAAD,IAAS;AAC5B,UAAMC,SAAS,GAAGxB,aAAa,CAACF,GAAd,EAAlB;AACAuB,IAAAA,KAAK,CAACN,GAAN,CAAUS,SAAV,EAAqBD,GAArB;AACD,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACD,CAbM;AAePxC,QAAQ,CAACyC,aAAT,CAAuBxC,MAAvB;AAEA,OAAO,MAAMyC,IAAI,GAAG1C,QAAQ,CAAC0C,IAAT,EAAb;AACP,OAAO,MAAM9B,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,MAAM+B,QAAQ,GAAG,IAAI3C,QAAQ,CAAC0C,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe3C,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyDM-8qoaDpP7RdOEBJ-BgJZnl4Q2qNe-vE\",\n  authDomain: \"clothing-ecommerce-db-411c7.firebaseapp.com\",\n  projectId: \"clothing-ecommerce-db-411c7\",\n  storageBucket: \"clothing-ecommerce-db-411c7.appspot.com\",\n  messagingSenderId: \"436483630843\",\n  appId: \"1:436483630843:web:487d3bcf35aefc78f7b25e\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection(\"users\");\n\n  const snapShot = await userRef.get();\n  const collectionSnapShot = await collectionRef.get();\n  console.log({ collection: collectionSnapShot.docs.map((doc) => doc.data()) });\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}