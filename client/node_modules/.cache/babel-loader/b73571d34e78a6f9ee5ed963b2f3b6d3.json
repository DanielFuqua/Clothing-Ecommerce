{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDM-8qoaDpP7RdOEBJ-BgJZnl4Q2qNe-vE\",\n  authDomain: \"clothing-ecommerce-db-411c7.firebaseapp.com\",\n  projectId: \"clothing-ecommerce-db-411c7\",\n  storageBucket: \"clothing-ecommerce-db-411c7.appspot.com\",\n  messagingSenderId: \"436483630843\",\n  appId: \"1:436483630843:web:487d3bcf35aefc78f7b25e\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(userAuth);\n  const userRef = firestore.doc(`users/test65654654`);\n  console.log(userRef);\n  const snapShot = await userRef.get();\n  console.log(snapShot.data());\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName: \"Test User\",\n        email: \"randomEmail@gmail.com\",\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/danielfuqua/workspace/Clothing-Ecommerce/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","console","log","userRef","firestore","doc","snapShot","get","data","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,6CAFC;AAGbC,EAAAA,SAAS,EAAE,6BAHE;AAIbC,EAAAA,aAAa,EAAE,yCAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE;AANM,CAAf;AASA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACfE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAMI,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,oBAAf,CAAhB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAEA,QAAMG,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACE,IAAT,EAAZ;;AAEA,MAAI,CAACF,QAAQ,CAACG,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBZ,QAA/B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WAAW,EAAE,WADG;AAEhBC,QAAAA,KAAK,EAAE,uBAFS;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGZ;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOe,KAAP,EAAc;AACdd,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCa,KAAK,CAACC,OAAzC;AACD;AACF;;AAED,SAAOb,OAAP;AACD,CA3BM;AA6BPb,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMd,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMe,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyDM-8qoaDpP7RdOEBJ-BgJZnl4Q2qNe-vE\",\n  authDomain: \"clothing-ecommerce-db-411c7.firebaseapp.com\",\n  projectId: \"clothing-ecommerce-db-411c7\",\n  storageBucket: \"clothing-ecommerce-db-411c7.appspot.com\",\n  messagingSenderId: \"436483630843\",\n  appId: \"1:436483630843:web:487d3bcf35aefc78f7b25e\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(userAuth);\n\n  const userRef = firestore.doc(`users/test65654654`);\n  console.log(userRef);\n\n  const snapShot = await userRef.get();\n  console.log(snapShot.data());\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName: \"Test User\",\n        email: \"randomEmail@gmail.com\",\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}